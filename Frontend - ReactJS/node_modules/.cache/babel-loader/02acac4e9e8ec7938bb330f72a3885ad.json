{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amine\\\\Desktop\\\\Projet JEE\\\\Frontend\\\\titsuite\\\\src\\\\App.js\";\nimport LandingPage from './components/Landing';\nimport navBar from './components/NavBar';\nimport LandingPage2 from './components/LandingPage';\nimport Login from './components/Login';\nimport SignUp from './components/SignUp';\nimport Dashboard from './components/Dashboard';\nimport { Route, BrowserRouter as Router, Switch, Link } from \"react-router-dom\";\nimport Landing from './components/Landing';\nimport Portfeuille from './components/Portfeuille';\nimport MesAnnonces from './components/MesAnnonces';\nimport Profile from './components/Profile';\nimport { React, Component } from 'react';\nimport UnauthGuard from './components/UnauthGuard';\nimport AuthGuard from './components/AuthGuard';\nimport CustomerProfile from './components/CustomerProfile';\nimport CustomerDashboard from './components/CustomerDashboard';\nimport CustomerHistorique from './components/CustomerHistorique';\nimport ServiceClient from './components/ServiceClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.expiresIn = 900 * 1000;\n    this.refreshTimer = null;\n    this.callTimeout = null;\n\n    this.authenticate = () => {\n      this.setState({\n        isAuthenticated: true\n      });\n      localStorage.setItem(\"isAuthCheck\", \"\");\n      localStorage.setItem(\"expiryTime\", Date.now() + this.expiresIn);\n      this.setAutoLoginInterval();\n    };\n\n    this.logout = () => {\n      this.setState({\n        isAuthenticated: false\n      });\n      clearTimeout(this.callTimeout);\n      clearInterval(this.refreshTimer);\n      localStorage.clear();\n    };\n\n    this.autoLoginCallback = key => {\n      const requestOptions = {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n      fetch('/Titsuite-1.0-SNAPSHOT/api/users/refreshToken', requestOptions).then(res => res.json()).then(data => {\n        console.log(data);\n        localStorage.setItem(key, Date.now() + this.expiresIn);\n      });\n    };\n\n    this.setAutoLoginInterval = () => {\n      const key = 'expiryTime';\n      const now = Date.now();\n      const expiryTime = localStorage.getItem(key);\n\n      const executeCallback = () => {\n        this.autoLoginCallback(key);\n      };\n\n      if (expiryTime != null) {\n        // User is logged in\n        if (now >= expiryTime) {\n          // User has been away longer than expiryTime, log him out\n          localStorage.removeItem(key);\n          this.logout();\n        } else {\n          // Execute callback when we reach the next interval\n          this.callTimeout = setTimeout(() => {\n            this.refreshTimer = setInterval(executeCallback, this.expiresIn);\n            executeCallback();\n          }, expiryTime - now);\n        }\n      }\n    };\n\n    this.state = {\n      isAuthenticated: false\n    };\n    const auth = localStorage.getItem(\"isAuthCheck\");\n    if (auth != null) this.state.isAuthenticated = true;\n  }\n\n  componentDidMount() {\n    this.setAutoLoginInterval();\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.callTimeout);\n    clearInterval(this.refreshTimer);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            exact: true,\n            component: LandingPage2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(AuthGuard, {\n            path: \"/dashboard\",\n            auth: this.state.isAuthenticated,\n            rest: {\n              logout: this.logout\n            },\n            component: Dashboard\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(AuthGuard, {\n            path: \"/customer/dashboard\",\n            auth: this.state.isAuthenticated,\n            rest: {\n              logout: this.logout\n            },\n            component: CustomerDashboard\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(AuthGuard, {\n            path: \"/portfeuille\",\n            auth: this.state.isAuthenticated,\n            rest: {\n              logout: this.logout\n            },\n            component: Portfeuille\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(AuthGuard, {\n            path: \"/customer/historique\",\n            auth: this.state.isAuthenticated,\n            rest: {\n              logout: this.logout\n            },\n            component: CustomerHistorique\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(UnauthGuard, {\n            path: \"/signup\",\n            auth: this.state.isAuthenticated,\n            component: SignUp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(UnauthGuard, {\n            path: \"/login\",\n            auth: this.state.isAuthenticated,\n            rest: {\n              authenticate: this.authenticate\n            },\n            component: Login\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(AuthGuard, {\n            path: \"/freelancer/profile\",\n            auth: this.state.isAuthenticated,\n            rest: {\n              logout: this.logout\n            },\n            component: Profile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(AuthGuard, {\n            path: \"/customer/profile\",\n            auth: this.state.isAuthenticated,\n            rest: {\n              logout: this.logout\n            },\n            component: CustomerProfile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(AuthGuard, {\n            path: \"/annonces\",\n            auth: this.state.isAuthenticated,\n            rest: {\n              logout: this.logout\n            },\n            component: MesAnnonces\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(AuthGuard, {\n            path: \"/service-client\",\n            auth: this.state.isAuthenticated,\n            rest: {\n              logout: this.logout\n            },\n            component: ServiceClient\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/amine/Desktop/Projet JEE/Frontend/titsuite/src/App.js"],"names":["LandingPage","navBar","LandingPage2","Login","SignUp","Dashboard","Route","BrowserRouter","Router","Switch","Link","Landing","Portfeuille","MesAnnonces","Profile","React","Component","UnauthGuard","AuthGuard","CustomerProfile","CustomerDashboard","CustomerHistorique","ServiceClient","App","constructor","expiresIn","refreshTimer","callTimeout","authenticate","setState","isAuthenticated","localStorage","setItem","Date","now","setAutoLoginInterval","logout","clearTimeout","clearInterval","clear","autoLoginCallback","key","requestOptions","method","headers","fetch","then","res","json","data","console","log","expiryTime","getItem","executeCallback","removeItem","setTimeout","setInterval","state","auth","componentDidMount","componentWillUnmount","render"],"mappings":"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","sourcesContent":["import LandingPage from './components/Landing';\r\nimport navBar from './components/NavBar';\r\n\r\nimport LandingPage2 from './components/LandingPage'\r\nimport Login from './components/Login'\r\nimport SignUp from './components/SignUp';\r\nimport Dashboard from './components/Dashboard';\r\nimport {Route, BrowserRouter as Router, Switch, Link} from \"react-router-dom\"\r\nimport Landing from './components/Landing';\r\nimport Portfeuille from './components/Portfeuille';\r\nimport MesAnnonces from './components/MesAnnonces';\r\nimport Profile from './components/Profile';\r\nimport { React, Component } from 'react';\r\nimport UnauthGuard from './components/UnauthGuard';\r\nimport AuthGuard from './components/AuthGuard';\r\nimport CustomerProfile from './components/CustomerProfile'\r\nimport CustomerDashboard from './components/CustomerDashboard';\r\nimport CustomerHistorique from './components/CustomerHistorique';\r\nimport ServiceClient from './components/ServiceClient';\r\n\r\nexport default class App extends Component {\r\n  expiresIn = 900 * 1000;\r\n  \r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isAuthenticated: false,\r\n    };\r\n    const auth = localStorage.getItem(\"isAuthCheck\");\r\n    if (auth != null)\r\n      this.state.isAuthenticated = true;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setAutoLoginInterval();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearTimeout(this.callTimeout);\r\n    clearInterval(this.refreshTimer);\r\n  }\r\n\r\n  refreshTimer = null;\r\n  callTimeout = null;\r\n\r\n  authenticate = () => {\r\n    this.setState({\r\n      isAuthenticated: true\r\n    });\r\n    localStorage.setItem(\"isAuthCheck\", \"\");\r\n    localStorage.setItem(\"expiryTime\", Date.now() + this.expiresIn);\r\n    this.setAutoLoginInterval();\r\n  }\r\n\r\n  logout = () => {\r\n    this.setState({\r\n      isAuthenticated: false\r\n    });\r\n    clearTimeout(this.callTimeout);\r\n    clearInterval(this.refreshTimer);\r\n    localStorage.clear();\r\n  }\r\n\r\n  autoLoginCallback = (key) => {\r\n    const requestOptions = {\r\n      method: 'GET',\r\n      headers: { 'Content-Type': 'application/json' }\r\n    };\r\n    fetch('/Titsuite-1.0-SNAPSHOT/api/users/refreshToken', requestOptions).then(res => res.json()).then((data) => {\r\n      console.log(data);\r\n      localStorage.setItem(key, Date.now() + this.expiresIn);\r\n    });\r\n  }\r\n\r\n  setAutoLoginInterval = () => {\r\n    const key = 'expiryTime';\r\n    const now = Date.now();\r\n    const expiryTime = localStorage.getItem(key);\r\n    const executeCallback = () => {\r\n      this.autoLoginCallback(key);\r\n    };\r\n    if (expiryTime != null) { // User is logged in\r\n      if (now >= expiryTime) { // User has been away longer than expiryTime, log him out\r\n        localStorage.removeItem(key);\r\n        this.logout();\r\n      }\r\n      else { // Execute callback when we reach the next interval\r\n        this.callTimeout = setTimeout(() => {\r\n          this.refreshTimer = setInterval(executeCallback, this.expiresIn);\r\n          executeCallback();\r\n        }, expiryTime - now);\r\n      }\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n    <div className=\"App\">\r\n      \r\n\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={LandingPage2}/>\r\n          {/* <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/signup\" component={SignUp} /> */}\r\n          <AuthGuard path=\"/dashboard\" auth={this.state.isAuthenticated}  rest={{logout: this.logout}} component={Dashboard} />\r\n          <AuthGuard path=\"/customer/dashboard\" auth={this.state.isAuthenticated}  rest={{logout: this.logout}} component={CustomerDashboard} />\r\n          <AuthGuard path=\"/portfeuille\" auth={this.state.isAuthenticated}  rest={{logout: this.logout}} component={Portfeuille} />\r\n          <AuthGuard path=\"/customer/historique\" auth={this.state.isAuthenticated}  rest={{logout: this.logout}} component={CustomerHistorique} /> \r\n          {/* <Route path=\"/annonces\" component={MesAnnonces}/>\r\n          <Route path=\"/freelancer/profile\" component={Profile} /> */}\r\n\r\n          <UnauthGuard path=\"/signup\" auth={this.state.isAuthenticated} component={SignUp} />\r\n          <UnauthGuard path=\"/login\" auth={this.state.isAuthenticated} rest={{authenticate: this.authenticate}} component={Login} />\r\n          <AuthGuard path=\"/freelancer/profile\" auth={this.state.isAuthenticated} rest={{logout: this.logout}} component={Profile} />\r\n          <AuthGuard path=\"/customer/profile\" auth={this.state.isAuthenticated} rest={{logout: this.logout}} component={CustomerProfile} />\r\n          \r\n          <AuthGuard path=\"/annonces\" auth={this.state.isAuthenticated} rest={{logout: this.logout}} component={MesAnnonces} />\r\n          <AuthGuard path=\"/service-client\" auth={this.state.isAuthenticated} rest={{logout: this.logout}} component={ServiceClient} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n  }\r\n  \r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}